import { Dispatch } from "../../../call";
import { ethers } from "ethers";

export const getScheduler = (dispatch: Dispatch) => {
    return {
        /**
         * @param _when: U32
         * @param _maybe_periodic: Enum<{None: , Some: (U32, U32)}>
         * @param _priority: U8
         * @param _call: Enum<{Value: Enum<{System: Enum<{fill_block, remark, set_heap_pages, set_code, set_code_without_checks, set_storage, kill_storage, kill_prefix, remark_with_event}>, ParachainSystem: Enum<{set_validation_data, sudo_send_upward_message, authorize_upgrade, enact_authorized_upgrade}>, Timestamp: Enum<{set}>, ParachainInfo: Enum<{}>, Balances: Enum<{transfer, set_balance, force_transfer, transfer_keep_alive, transfer_all, force_unreserve}>, Assets: Enum<{create, force_create, destroy, mint, burn, transfer, transfer_keep_alive, force_transfer, freeze, thaw, freeze_asset, thaw_asset, transfer_ownership, set_team, set_metadata, clear_metadata, force_set_metadata, force_clear_metadata, force_asset_status, approve_transfer, cancel_approval, force_cancel_approval, transfer_approved, touch, refund}>, Deposit: Enum<{lock, claim, claim_with_penalty}>, AccountMigration: Enum<{migrate}>, Authorship: Enum<{set_uncles}>, Staking: Enum<{stake, unstake, claim, collect, nominate, chill}>, Session: Enum<{set_keys, purge_keys}>, Democracy: Enum<{propose, second, vote, emergency_cancel, external_propose, external_propose_majority, external_propose_default, fast_track, veto_external, cancel_referendum, cancel_queued, delegate, undelegate, clear_public_proposals, note_preimage, note_preimage_operational, note_imminent_preimage, note_imminent_preimage_operational, reap_preimage, unlock, remove_vote, remove_other_vote, enact_proposal, blacklist, cancel_proposal}>, Council: Enum<{set_members, execute, propose, vote, close, disapprove_proposal}>, TechnicalCommittee: Enum<{set_members, execute, propose, vote, close, disapprove_proposal}>, PhragmenElection: Enum<{vote, remove_voter, submit_candidacy, renounce_candidacy, remove_member, clean_defunct_voters}>, TechnicalMembership: Enum<{add_member, remove_member, swap_member, reset_members, change_key, set_prime, clear_prime}>, Treasury: Enum<{propose_spend, reject_proposal, approve_proposal, spend, remove_approval}>, Tips: Enum<{report_awesome, retract_tip, tip_new, tip, close_tip, slash_tip}>, Sudo: Enum<{sudo, sudo_unchecked_weight, set_key, sudo_as}>, Vesting: Enum<{vest, vest_other, vested_transfer, force_vested_transfer, merge_schedules}>, Utility: Enum<{batch, as_derivative, batch_all, dispatch_as, force_batch}>, Identity: Enum<{add_registrar, set_identity, set_subs, clear_identity, request_judgement, cancel_request, set_fee, set_account_id, set_fields, provide_judgement, kill_identity, add_sub, rename_sub, remove_sub, quit_sub}>, Scheduler: Enum<{schedule, cancel, schedule_named, cancel_named, schedule_after, schedule_named_after}>, Preimage: Enum<{note_preimage, unnote_preimage, request_preimage, unrequest_preimage}>, Proxy: Enum<{proxy, add_proxy, remove_proxy, remove_proxies, create_pure, kill_pure, announce, remove_announcement, reject_announcement, proxy_announced}>, Multisig: Enum<{as_multi_threshold_1, as_multi, approve_as_multi, cancel_as_multi}>, XcmpQueue: Enum<{service_overweight, suspend_xcm_execution, resume_xcm_execution, update_suspend_threshold, update_drop_threshold, update_resume_threshold, update_threshold_weight, update_weight_restrict_decay, update_xcmp_max_individual_weight}>, PolkadotXcm: Enum<{send, teleport_assets, reserve_transfer_assets, execute, force_xcm_version, force_default_xcm_version, force_subscribe_version_notify, force_unsubscribe_version_notify, limited_reserve_transfer_assets, limited_teleport_assets}>, CumulusXcm: Enum<{}>, DmpQueue: Enum<{service_overweight}>, Ethereum: Enum<{transact}>, Evm: Enum<{withdraw, call, create, create2}>, BaseFee: Enum<{set_base_fee_per_gas, set_elasticity}>, MessageTransact: Enum<{message_transact}>}>, Hash: [U8; 32]}>
	 */
        schedule: async (signer: ethers.Signer, _when: unknown, _maybe_periodic: unknown, _priority: unknown, _call: unknown): Promise<ethers.providers.TransactionReceipt> => {
            return await dispatch(signer, 'Scheduler', 'schedule', false, _when, _maybe_periodic, _priority, _call);
        },

        /**
         * @param _when: U32
         * @param _index: U32
	 */
        cancel: async (signer: ethers.Signer, _when: unknown, _index: unknown): Promise<ethers.providers.TransactionReceipt> => {
            return await dispatch(signer, 'Scheduler', 'cancel', false, _when, _index);
        },

        /**
         * @param _id: Vec<U8>
         * @param _when: U32
         * @param _maybe_periodic: Enum<{None: , Some: (U32, U32)}>
         * @param _priority: U8
         * @param _call: Enum<{Value: Enum<{System: Enum<{fill_block, remark, set_heap_pages, set_code, set_code_without_checks, set_storage, kill_storage, kill_prefix, remark_with_event}>, ParachainSystem: Enum<{set_validation_data, sudo_send_upward_message, authorize_upgrade, enact_authorized_upgrade}>, Timestamp: Enum<{set}>, ParachainInfo: Enum<{}>, Balances: Enum<{transfer, set_balance, force_transfer, transfer_keep_alive, transfer_all, force_unreserve}>, Assets: Enum<{create, force_create, destroy, mint, burn, transfer, transfer_keep_alive, force_transfer, freeze, thaw, freeze_asset, thaw_asset, transfer_ownership, set_team, set_metadata, clear_metadata, force_set_metadata, force_clear_metadata, force_asset_status, approve_transfer, cancel_approval, force_cancel_approval, transfer_approved, touch, refund}>, Deposit: Enum<{lock, claim, claim_with_penalty}>, AccountMigration: Enum<{migrate}>, Authorship: Enum<{set_uncles}>, Staking: Enum<{stake, unstake, claim, collect, nominate, chill}>, Session: Enum<{set_keys, purge_keys}>, Democracy: Enum<{propose, second, vote, emergency_cancel, external_propose, external_propose_majority, external_propose_default, fast_track, veto_external, cancel_referendum, cancel_queued, delegate, undelegate, clear_public_proposals, note_preimage, note_preimage_operational, note_imminent_preimage, note_imminent_preimage_operational, reap_preimage, unlock, remove_vote, remove_other_vote, enact_proposal, blacklist, cancel_proposal}>, Council: Enum<{set_members, execute, propose, vote, close, disapprove_proposal}>, TechnicalCommittee: Enum<{set_members, execute, propose, vote, close, disapprove_proposal}>, PhragmenElection: Enum<{vote, remove_voter, submit_candidacy, renounce_candidacy, remove_member, clean_defunct_voters}>, TechnicalMembership: Enum<{add_member, remove_member, swap_member, reset_members, change_key, set_prime, clear_prime}>, Treasury: Enum<{propose_spend, reject_proposal, approve_proposal, spend, remove_approval}>, Tips: Enum<{report_awesome, retract_tip, tip_new, tip, close_tip, slash_tip}>, Sudo: Enum<{sudo, sudo_unchecked_weight, set_key, sudo_as}>, Vesting: Enum<{vest, vest_other, vested_transfer, force_vested_transfer, merge_schedules}>, Utility: Enum<{batch, as_derivative, batch_all, dispatch_as, force_batch}>, Identity: Enum<{add_registrar, set_identity, set_subs, clear_identity, request_judgement, cancel_request, set_fee, set_account_id, set_fields, provide_judgement, kill_identity, add_sub, rename_sub, remove_sub, quit_sub}>, Scheduler: Enum<{schedule, cancel, schedule_named, cancel_named, schedule_after, schedule_named_after}>, Preimage: Enum<{note_preimage, unnote_preimage, request_preimage, unrequest_preimage}>, Proxy: Enum<{proxy, add_proxy, remove_proxy, remove_proxies, create_pure, kill_pure, announce, remove_announcement, reject_announcement, proxy_announced}>, Multisig: Enum<{as_multi_threshold_1, as_multi, approve_as_multi, cancel_as_multi}>, XcmpQueue: Enum<{service_overweight, suspend_xcm_execution, resume_xcm_execution, update_suspend_threshold, update_drop_threshold, update_resume_threshold, update_threshold_weight, update_weight_restrict_decay, update_xcmp_max_individual_weight}>, PolkadotXcm: Enum<{send, teleport_assets, reserve_transfer_assets, execute, force_xcm_version, force_default_xcm_version, force_subscribe_version_notify, force_unsubscribe_version_notify, limited_reserve_transfer_assets, limited_teleport_assets}>, CumulusXcm: Enum<{}>, DmpQueue: Enum<{service_overweight}>, Ethereum: Enum<{transact}>, Evm: Enum<{withdraw, call, create, create2}>, BaseFee: Enum<{set_base_fee_per_gas, set_elasticity}>, MessageTransact: Enum<{message_transact}>}>, Hash: [U8; 32]}>
	 */
        scheduleNamed: async (signer: ethers.Signer, _id: unknown, _when: unknown, _maybe_periodic: unknown, _priority: unknown, _call: unknown): Promise<ethers.providers.TransactionReceipt> => {
            return await dispatch(signer, 'Scheduler', 'scheduleNamed', false, _id, _when, _maybe_periodic, _priority, _call);
        },

        /**
         * @param _id: Vec<U8>
	 */
        cancelNamed: async (signer: ethers.Signer, _id: unknown): Promise<ethers.providers.TransactionReceipt> => {
            return await dispatch(signer, 'Scheduler', 'cancelNamed', false, _id);
        },

        /**
         * @param _after: U32
         * @param _maybe_periodic: Enum<{None: , Some: (U32, U32)}>
         * @param _priority: U8
         * @param _call: Enum<{Value: Enum<{System: Enum<{fill_block, remark, set_heap_pages, set_code, set_code_without_checks, set_storage, kill_storage, kill_prefix, remark_with_event}>, ParachainSystem: Enum<{set_validation_data, sudo_send_upward_message, authorize_upgrade, enact_authorized_upgrade}>, Timestamp: Enum<{set}>, ParachainInfo: Enum<{}>, Balances: Enum<{transfer, set_balance, force_transfer, transfer_keep_alive, transfer_all, force_unreserve}>, Assets: Enum<{create, force_create, destroy, mint, burn, transfer, transfer_keep_alive, force_transfer, freeze, thaw, freeze_asset, thaw_asset, transfer_ownership, set_team, set_metadata, clear_metadata, force_set_metadata, force_clear_metadata, force_asset_status, approve_transfer, cancel_approval, force_cancel_approval, transfer_approved, touch, refund}>, Deposit: Enum<{lock, claim, claim_with_penalty}>, AccountMigration: Enum<{migrate}>, Authorship: Enum<{set_uncles}>, Staking: Enum<{stake, unstake, claim, collect, nominate, chill}>, Session: Enum<{set_keys, purge_keys}>, Democracy: Enum<{propose, second, vote, emergency_cancel, external_propose, external_propose_majority, external_propose_default, fast_track, veto_external, cancel_referendum, cancel_queued, delegate, undelegate, clear_public_proposals, note_preimage, note_preimage_operational, note_imminent_preimage, note_imminent_preimage_operational, reap_preimage, unlock, remove_vote, remove_other_vote, enact_proposal, blacklist, cancel_proposal}>, Council: Enum<{set_members, execute, propose, vote, close, disapprove_proposal}>, TechnicalCommittee: Enum<{set_members, execute, propose, vote, close, disapprove_proposal}>, PhragmenElection: Enum<{vote, remove_voter, submit_candidacy, renounce_candidacy, remove_member, clean_defunct_voters}>, TechnicalMembership: Enum<{add_member, remove_member, swap_member, reset_members, change_key, set_prime, clear_prime}>, Treasury: Enum<{propose_spend, reject_proposal, approve_proposal, spend, remove_approval}>, Tips: Enum<{report_awesome, retract_tip, tip_new, tip, close_tip, slash_tip}>, Sudo: Enum<{sudo, sudo_unchecked_weight, set_key, sudo_as}>, Vesting: Enum<{vest, vest_other, vested_transfer, force_vested_transfer, merge_schedules}>, Utility: Enum<{batch, as_derivative, batch_all, dispatch_as, force_batch}>, Identity: Enum<{add_registrar, set_identity, set_subs, clear_identity, request_judgement, cancel_request, set_fee, set_account_id, set_fields, provide_judgement, kill_identity, add_sub, rename_sub, remove_sub, quit_sub}>, Scheduler: Enum<{schedule, cancel, schedule_named, cancel_named, schedule_after, schedule_named_after}>, Preimage: Enum<{note_preimage, unnote_preimage, request_preimage, unrequest_preimage}>, Proxy: Enum<{proxy, add_proxy, remove_proxy, remove_proxies, create_pure, kill_pure, announce, remove_announcement, reject_announcement, proxy_announced}>, Multisig: Enum<{as_multi_threshold_1, as_multi, approve_as_multi, cancel_as_multi}>, XcmpQueue: Enum<{service_overweight, suspend_xcm_execution, resume_xcm_execution, update_suspend_threshold, update_drop_threshold, update_resume_threshold, update_threshold_weight, update_weight_restrict_decay, update_xcmp_max_individual_weight}>, PolkadotXcm: Enum<{send, teleport_assets, reserve_transfer_assets, execute, force_xcm_version, force_default_xcm_version, force_subscribe_version_notify, force_unsubscribe_version_notify, limited_reserve_transfer_assets, limited_teleport_assets}>, CumulusXcm: Enum<{}>, DmpQueue: Enum<{service_overweight}>, Ethereum: Enum<{transact}>, Evm: Enum<{withdraw, call, create, create2}>, BaseFee: Enum<{set_base_fee_per_gas, set_elasticity}>, MessageTransact: Enum<{message_transact}>}>, Hash: [U8; 32]}>
	 */
        scheduleAfter: async (signer: ethers.Signer, _after: unknown, _maybe_periodic: unknown, _priority: unknown, _call: unknown): Promise<ethers.providers.TransactionReceipt> => {
            return await dispatch(signer, 'Scheduler', 'scheduleAfter', false, _after, _maybe_periodic, _priority, _call);
        },

        /**
         * @param _id: Vec<U8>
         * @param _after: U32
         * @param _maybe_periodic: Enum<{None: , Some: (U32, U32)}>
         * @param _priority: U8
         * @param _call: Enum<{Value: Enum<{System: Enum<{fill_block, remark, set_heap_pages, set_code, set_code_without_checks, set_storage, kill_storage, kill_prefix, remark_with_event}>, ParachainSystem: Enum<{set_validation_data, sudo_send_upward_message, authorize_upgrade, enact_authorized_upgrade}>, Timestamp: Enum<{set}>, ParachainInfo: Enum<{}>, Balances: Enum<{transfer, set_balance, force_transfer, transfer_keep_alive, transfer_all, force_unreserve}>, Assets: Enum<{create, force_create, destroy, mint, burn, transfer, transfer_keep_alive, force_transfer, freeze, thaw, freeze_asset, thaw_asset, transfer_ownership, set_team, set_metadata, clear_metadata, force_set_metadata, force_clear_metadata, force_asset_status, approve_transfer, cancel_approval, force_cancel_approval, transfer_approved, touch, refund}>, Deposit: Enum<{lock, claim, claim_with_penalty}>, AccountMigration: Enum<{migrate}>, Authorship: Enum<{set_uncles}>, Staking: Enum<{stake, unstake, claim, collect, nominate, chill}>, Session: Enum<{set_keys, purge_keys}>, Democracy: Enum<{propose, second, vote, emergency_cancel, external_propose, external_propose_majority, external_propose_default, fast_track, veto_external, cancel_referendum, cancel_queued, delegate, undelegate, clear_public_proposals, note_preimage, note_preimage_operational, note_imminent_preimage, note_imminent_preimage_operational, reap_preimage, unlock, remove_vote, remove_other_vote, enact_proposal, blacklist, cancel_proposal}>, Council: Enum<{set_members, execute, propose, vote, close, disapprove_proposal}>, TechnicalCommittee: Enum<{set_members, execute, propose, vote, close, disapprove_proposal}>, PhragmenElection: Enum<{vote, remove_voter, submit_candidacy, renounce_candidacy, remove_member, clean_defunct_voters}>, TechnicalMembership: Enum<{add_member, remove_member, swap_member, reset_members, change_key, set_prime, clear_prime}>, Treasury: Enum<{propose_spend, reject_proposal, approve_proposal, spend, remove_approval}>, Tips: Enum<{report_awesome, retract_tip, tip_new, tip, close_tip, slash_tip}>, Sudo: Enum<{sudo, sudo_unchecked_weight, set_key, sudo_as}>, Vesting: Enum<{vest, vest_other, vested_transfer, force_vested_transfer, merge_schedules}>, Utility: Enum<{batch, as_derivative, batch_all, dispatch_as, force_batch}>, Identity: Enum<{add_registrar, set_identity, set_subs, clear_identity, request_judgement, cancel_request, set_fee, set_account_id, set_fields, provide_judgement, kill_identity, add_sub, rename_sub, remove_sub, quit_sub}>, Scheduler: Enum<{schedule, cancel, schedule_named, cancel_named, schedule_after, schedule_named_after}>, Preimage: Enum<{note_preimage, unnote_preimage, request_preimage, unrequest_preimage}>, Proxy: Enum<{proxy, add_proxy, remove_proxy, remove_proxies, create_pure, kill_pure, announce, remove_announcement, reject_announcement, proxy_announced}>, Multisig: Enum<{as_multi_threshold_1, as_multi, approve_as_multi, cancel_as_multi}>, XcmpQueue: Enum<{service_overweight, suspend_xcm_execution, resume_xcm_execution, update_suspend_threshold, update_drop_threshold, update_resume_threshold, update_threshold_weight, update_weight_restrict_decay, update_xcmp_max_individual_weight}>, PolkadotXcm: Enum<{send, teleport_assets, reserve_transfer_assets, execute, force_xcm_version, force_default_xcm_version, force_subscribe_version_notify, force_unsubscribe_version_notify, limited_reserve_transfer_assets, limited_teleport_assets}>, CumulusXcm: Enum<{}>, DmpQueue: Enum<{service_overweight}>, Ethereum: Enum<{transact}>, Evm: Enum<{withdraw, call, create, create2}>, BaseFee: Enum<{set_base_fee_per_gas, set_elasticity}>, MessageTransact: Enum<{message_transact}>}>, Hash: [U8; 32]}>
	 */
        scheduleNamedAfter: async (signer: ethers.Signer, _id: unknown, _after: unknown, _maybe_periodic: unknown, _priority: unknown, _call: unknown): Promise<ethers.providers.TransactionReceipt> => {
            return await dispatch(signer, 'Scheduler', 'scheduleNamedAfter', false, _id, _after, _maybe_periodic, _priority, _call);
        },


    }
}
